services:
  postgres:
    image: postgres:16-alpine
    container_name: bookstore-postgres
    environment:
      POSTGRES_DB: bookstore
      POSTGRES_USER: bookstore
      POSTGRES_PASSWORD: bookstore_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/migration:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookstore -d bookstore"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bookstore-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: bookstore-backend
    environment:
      DATABASE_URL: postgresql://bookstore:bookstore_password@postgres:5432/bookstore
      DATABASE_POOL_SIZE: 10
      PORT: 8080
      ENVIRONMENT: "prod"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bookstore-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: bookstore-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - bookstore-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  bookstore-network:
    driver: bridge
